# /etc/skel/.bashrc
#
# This file is sourced by all *interactive* bash shells on startup,
# including some apparently interactive shells such as scp and rcp
# that can't tolerate any output.  So make sure this doesn't display
# anything or bad things will happen !


# Test for an interactive shell.  There is no need to set anything
# past this point for scp and rcp, and it's important to refrain from
# outputting anything in those cases.
if [[ $- != *i* ]] ; then
	# Shell is non-interactive.  Be done now!
	return
fi
source /usr/local/git_repo/meetup-devtools/meetuprc

# Put your fun stuff here.

PATH="/usr/bin/git:/usr/local/java/bin:/usr/local/ant/bin:/nethome/ivy/scripts:$PATH"

#for rubyenv
#export PATH="$HOME/.rbenv/bin:$PATH"
#eval "$(rbenv init -)"

#for jsdoc
export PATH="/home/ivy/repos/node_modules/jsdoc:$PATH"

#vars
export JAVA_HOME=/usr/local/java
export JAVA_HOME=/usr/local/java
export CATALINA_HOME=/usr/local/tomcat

export MEETUP=/usr/local/meetup
export IPHONE=/usr/local/meetup_iphone
export NETHOME=/nethome/ivy
export BACKUP=/tmp/bacula-restores/ivy/usr/local/git_repo/meetup-trunk/

#for jswat
export CATALINA_OPTS="$CATALINA_OPTS -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"
export ANT_HOME=/usr/local/ant
export ANT_OPTS="$ANT_OPTS -Xms1536m -Xmx1536m"
export ANT_ALLOW_LATEST="1"
export LD_LIBRARY_PATH=/usr/lib

#intellij
alias intel="/home/ivy/apps/idea-IC-141.178.9/bin/idea.sh"

#scripts
alias gitzilla='/usr/bin/perl /usr/local/util/devel_scripts/gitzilla.pl'
alias chapsticklog='tail -f /usr/local/tomcat/logs/chapstick.log | /usr/local/meetup/util/devel_scripts/highlight.py'
alias elog='tail -f /usr/local/tomcat/logs/catalina.out'
alias mlog='chapsticklog | less --pattern=ERROR.com.meetup.business.Meetstache'
alias fix='$MEETUP/util/devel_scripts/fix.py'
alias stopcat='sudo /etc/init.d/tomcat stop'
alias startcat='sudo /etc/init.d/tomcat start'
alias apachestart='sudo /usr/local/apache/bin/apachectl start'
alias apachestop='sudo /usr/local/apache/bin/apachectl stop'
alias trncp='cp /usr/local/meetup_trn/dist/*.xlf /usr/local/meetup/conf'
alias rebuild='/nethome/ivy/scripts/rebuild'
alias bounce='/nethome/ivy/scripts/bounce'
alias finder='/nethome/ivy/scripts/finder'
alias cr='/nethome/ivy/scripts/cr.sh'
alias fb="./util/devel_scripts/fb-test-users.js"
alias switchon="sudo $MEETUP/util/init/devel/switchboardd.sh start"
alias switchoff="sudo $MEETUP/util/init/devel/switchboardd.sh stop"
alias streamdbounce="sudo $MEETUP/util/init/localdev/streamd.sh restart"
alias cocobounce="bounce && streamdbounce && switchoff && switchon"
alias dbmirror="mysql -h dbw.dev.meetup.com -u meetup_ro -p chapstick"
alias dbdev="mysql -h db.int.meetup.com -u meetup -p chapstick"
alias proddb='ssh dbw.dev.meetup.com -t "mysql -u meetup -p -h localhost chapstick"'
alias apidocs='DEVDOCS=true ant api_docs'
alias github_ssh="eval '$(ssh-agent -s)'; ssh-add ~/.ssh/github"
alias netc='netcat 127.0.0.1 4444'
alias ecs_up="sudo ./util/init/production/email_campaign_consume.sh start"
alias ecs_down="sudo ./util/init/production/email_campaign_consume.sh stop"
alias ecs_bounce="ecs_down; ant emails; ecs_up"

function differ {
	REGEX=$1
	echo $REGEX
	git diff origin/master --name-only | grep -v $REGEX | xargs git diff origin/master --
}

RED="\[\033[0;31m\]"
YELLOW="\[\033[0;33m\]"
GREEN="\[\033[0;32m\]"
BLUE="\[\033[0;34m\]"
LIGHT_BLUE="\[\033[01;34m\]"
LIGHT_RED="\[\033[1;31m\]"
LIGHT_GREEN="\[\033[1;32m\]"
WHITE="\[\033[1;37m\]"
LIGHT_GRAY="\[\033[0;37m\]"
COLOR_NONE="\[\033[00m\]" 

#Shows current branch in bash prompt

function parse_git_branch {

    GITOUT=$(git status 2>/dev/null)

    if [[ $? == 0 ]]; then

        PROMPT=$(echo ${GITOUT#\#On branch} | head -n1 | awk '{print $3}')
        DIRTY=$(echo $GITOUT | head -n2 | grep "nothing to commit" >/dev/null 2>&1 || echo "*")
        
        echo "[$(echo $PROMPT)$DIRTY]"
    fi
}

function prompt_func() {
	prompt="${TITLEBAR}${LIGHT_GREEN}\u@\h${RED} ${LIGHT_BLUE}\w${GREEN}$(parse_git_branch)${BLUE} \$${COLOR_NONE} "
	PS1="${prompt}"
}

PROMPT_COMMAND=prompt_func 

# git branch auto-completion
. /usr/local/meetup/util/devel_scripts/git-completion.bash


ssh_agent_list () { find /tmp -type s -uid $UID -name "*agent.*" 2> /dev/null ; }

ssh_agent_reconnect () {
	unset ideal fallback
	for i in $(ssh_agent_list) ; do
		SSH_AUTH_SOCK=${i} ssh-add -l > /dev/null 2>&1
		case $? in
			0) ideal=${i}
			break
			;;
			1) fallback=${i}
			;;
			2) echo -en .
			;;
		esac
	done

	if [[ -n $ideal ]]; then
		ln -nsf ${ideal} ~/.ssh/ssh-agent.sock;
	elif [[ -n $fallback ]]; then
		ln -nsf ${fallback} ~/.ssh/ssh-agent.sock
	fi

	export SSH_AUTH_SOCK=~/.ssh/ssh-agent.sock
	ssh-add -l
}	

alias sshr='ssh_agent_reconnect'

# Set standard CLASSPATH
if [ -f /usr/local/util/conf/classpath.sh ]; then
    . /usr/local/util/conf/classpath.sh
    export CLASSPATH=.:$CLASSPATH
fi
    
umask 002
export EDITOR=/usr/bin/vi
source /usr/local/git_repo/meetup-devtools/meetuprc
